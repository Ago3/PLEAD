import os
from paead_info.info import *

LMSBwS2I_SKETCH_PLACEHOLDER = '<mask>'


LMSBwS2I_LR = 2e-5
LMSBwS2I_BEAM = 5
LMSBwS2I_MAX_LENGTH = 50
LMSBwS2I_TGT_MAX_LENGTH = LMSBwS2I_MAX_LENGTH
LMSBwS2I_EPOCHS = 100
LMSBwS2I_PRINT_EVERY = 5
LMSBwS2I_SIZE = 'base'
LMSBwS2I_BATCH_SIZE = 16
LMSBwS2I_ENCODE_INPUT_TWICE = True
LMSBwS2I_HATE_PRETRAIN = 0
LMSBwS2I_SKETCH_LOSS_WEIGHT = 1.0
LMSBwS2I_TREE_LOSS_WEIGHT = 1.0
LMSBwS2I_INTENT_LOSS_WEIGHT = 1.0
LMSBwS2I_BINARY_INTENT_LOSS_WEIGHT = 0.0
LMSBwS2I_NEGATIVE_STANCE_LOSS_WEIGHT = 0.0
LMSBwS2I_AGGR = 'max'
LMSBwS2I_NORM = True
LMSBwS2I_NH_WEIGHT = 1.0
LMSBwS2I_S2I_path = LOG_DIR + '/s2i/iw1.0_bw0.4_hp0_lr0.0001_bs32_adam_posweight.ckpt'
LMSBwS2I_EXPERIMENT_NAME = f'checkpoints_{LMSBwS2I_SIZE}_dw{LMSBwS2I_NH_WEIGHT}_sw{LMSBwS2I_SKETCH_LOSS_WEIGHT}_tw{LMSBwS2I_TREE_LOSS_WEIGHT}_w{LMSBwS2I_INTENT_LOSS_WEIGHT}_bw{LMSBwS2I_BINARY_INTENT_LOSS_WEIGHT}_{LMSBwS2I_NEGATIVE_STANCE_LOSS_WEIGHT}ns_{LMSBwS2I_AGGR}_norm{LMSBwS2I_NORM}_2lm_encInp{LMSBwS2I_ENCODE_INPUT_TWICE}_hp{LMSBwS2I_HATE_PRETRAIN}_lr{LMSBwS2I_LR}_batch{LMSBwS2I_BATCH_SIZE}_beam{LMSBwS2I_BEAM}_maxLen{LMSBwS2I_MAX_LENGTH}/'
LMSBwS2I_MODEL_DIR = LOG_DIR + 'litmsbart_slot2intent/'
LMSBwS2I_CHECKPOINT_DIR = LMSBwS2I_MODEL_DIR + LMSBwS2I_EXPERIMENT_NAME

if not os.path.exists(LMSBwS2I_MODEL_DIR):
	os.makedirs(LMSBwS2I_MODEL_DIR)
LMSBwS2I_PREDICTIONS_FILE = LMSBwS2I_MODEL_DIR + f'{LMSBwS2I_EXPERIMENT_NAME[:-1]}.res.tsv'

LMSBwS2I_RES_FILE = LMSBwS2I_MODEL_DIR + 'scores.tsv'

LMSBwS2I_AAA_CKPT = LMSBwS2I_CHECKPOINT_DIR + 'default/version_SEED/checkpoints/'

LMSBwS2I_AAA_ANSWER_FILES_DIR = LMSBwS2I_CHECKPOINT_DIR + 'aaa_answers/'
if not os.path.exists(LMSBwS2I_AAA_ANSWER_FILES_DIR):
	os.makedirs(LMSBwS2I_AAA_ANSWER_FILES_DIR)
LMSBwS2I_AAA_ANSWER_FILES = [f'{LMSBwS2I_AAA_ANSWER_FILES_DIR}{fname}' for fname in AAA_FILES]
